type: action
definition:
  title: "Gửi yêu cầu đến Akamai API"
  description: "Gửi yêu cầu HTTP được ký bằng EdgeGrid đến Akamai API"
  namespace: tools.akamai
  name: send_signed_request
  secrets:
    - name: akamai_credentials
      keys:
        - client_token
        - client_secret
        - access_token
        - host
  expects:
    method:
      type: string
      description: "Phương thức HTTP (GET, POST, v.v.)"
    path:
      type: string
      description: "Đường dẫn API (ví dụ: /path/to/resource)"
    body:
      type: string
      description: "Nội dung yêu cầu (nếu có)"
      default: ""
  steps:
    - ref: send_request
      action: core.script.run_python
      args:
        script: |
          import hashlib
          import hmac
          import base64
          import datetime
          import uuid
          import http.client
          import json

          def sign_and_send_request(method, path, body, client_token, client_secret, access_token, host):
              timestamp = datetime.datetime.utcnow().strftime('%Y%m%dT%H:%M:%S+0000')
              nonce = str(uuid.uuid4())
              signing_key = hmac.new(client_secret.encode(), timestamp.encode(), hashlib.sha256).digest()
              signing_key_base64 = base64.b64encode(signing_key).decode()

              data_to_sign = '\t'.join([method.upper(), path, host.lower(), '', '', access_token, timestamp, nonce, body])
              signature = hmac.new(signing_key, data_to_sign.encode(), hashlib.sha256).digest()
              signature_base64 = base64.b64encode(signature).decode()

              auth_header = f'EG1-HMAC-SHA256 client_token={client_token};access_token={access_token};timestamp={timestamp};nonce={nonce};signature={signature_base64}'

              conn = http.client.HTTPSConnection(host)
              headers = {
                  'Authorization': auth_header,
                  'Content-Type': 'application/json',
                  'Host': host
              }
              conn.request(method, path, body, headers)
              res = conn.getresponse()
              data = res.read()
              return {
                  "status_code": res.status,
                  "response": json.loads(data.decode("utf-8"))
              }

          def main(method, path, body, client_token, client_secret, access_token, host):
              return sign_and_send_request(method, path, body, client_token, client_secret, access_token, host)
        inputs:
          method: ${{ inputs.method }}
          path: ${{ inputs.path }}
          body: ${{ inputs.body }}
          client_token: ${{ SECRETS.akamai_credentials.client_token }}
          client_secret: ${{ SECRETS.akamai_credentials.client_secret }}
          access_token: ${{ SECRETS.akamai_credentials.access_token }}
          host: ${{ SECRETS.akamai_credentials.host }}
  returns:
    status_code: ${{ steps.send_request.result.status_code }}
    response: ${{ steps.send_request.result.response }}
